package cloud.pangeacyber.pangea.redact.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public enum MatcherType {
	CREDIT_CARD("CREDIT_CARD"),
	CRYPTO("CRYPTO"),
	DATE_TIME("DATE_TIME"),
	EMAIL_ADDRESS("EMAIL_ADDRESS"),
	IBAN_CODE("IBAN_CODE"),
	IP_ADDRESS("IP_ADDRESS"),
	NRP("NRP"),
	LOCATION("LOCATION"),
	PERSON("PERSON"),
	PHONE_NUMBER("PHONE_NUMBER"),
	MEDICAL_LICENSE("MEDICAL_LICENSE"),
	URL("URL"),
	US_BANK_NUMBER("US_BANK_NUMBER"),
	US_DRIVER_LICENSE("US_DRIVER_LICENSE"),
	US_ITIN("US_ITIN"),
	US_PASSPORT("US_PASSPORT"),
	US_SSN("US_SSN"),
	UK_NHS("UK_NHS"),
	NIF("NIF"),
	FIN_NRIC("FIN/NRIC"),
	AU_ABN("AU_ABN"),
	AU_ACN("AU_ACN"),
	AU_TFN("AU_TFN"),
	AU_MEDICARE("AU_MEDICARE"),
	FIREBASE_URL("FIREBASE_URL"),
	RSA_PRIVATE_KEY("RSA_PRIVATE_KEY"),
	SSH_DSA_PRIVATE_KEY("SSH_DSA_PRIVATE_KEY"),
	SSH_EC_PRIVATE_KEY("SSH_EC_PRIVATE_KEY"),
	PGP_PRIVATE_KEY_BLOCK("PGP_PRIVATE_KEY_BLOCK"),
	AMAZON_AWS_ACCESS_KEY_ID("AMAZON_AWS_ACCESS_KEY_ID"),
	AMAZON_AWS_SECRET_ACCESS_KEY("AMAZON_AWS_SECRET_ACCESS_KEY"),
	AMAZON_MWS_AUTH_TOKEN("AMAZON_MWS_AUTH_TOKEN"),
	FACEBOOK_ACCESS_TOKEN("FACEBOOK_ACCESS_TOKEN"),
	GITHUB_ACCESS_TOKEN("GITHUB_ACCESS_TOKEN"),
	JWT_TOKEN("JWT_TOKEN"),
	GOOGLE_API_KEY("GOOGLE_API_KEY"),
	GOOGLE_CLOUD_PLATFORM_API_KEY("GOOGLE_CLOUD_PLATFORM_API_KEY"),
	GOOGLE_DRIVE_API_KEY("GOOGLE_DRIVE_API_KEY"),
	GOOGLE_CLOUD_PLATFORM_SERVICE_ACCOUNT("GOOGLE_CLOUD_PLATFORM_SERVICE_ACCOUNT"),
	GOOGLE_GMAIL_API_KEY("GOOGLE_GMAIL_API_KEY"),
	YOUTUBE_API_KEY("YOUTUBE_API_KEY"),
	MAILCHIMP_API_KEY("MAILCHIMP_API_KEY"),
	MAILGUN_API_KEY("MAILGUN_API_KEY"),
	MONEY("MONEY"),
	BASIC_AUTH("BASIC_AUTH"),
	PICATIC_API_KEY("PICATIC_API_KEY"),
	SLACK_TOKEN("SLACK_TOKEN"),
	SLACK_WEBHOOK("SLACK_WEBHOOK"),
	STRIPE_API_KEY("STRIPE_API_KEY"),
	STRIPE_RESTRICTED_API_KEY("STRIPE_RESTRICTED_API_KEY"),
	SQUARE_ACCESS_TOKEN("SQUARE_ACCESS_TOKEN"),
	SQUARE_OAUTH_SECRET("SQUARE_OAUTH_SECRET"),
	TWILIO_API_KEY("TWILIO_API_KEY"),
	PANGEA_TOKEN("PANGEA_TOKEN"),
	PROFANITY("PROFANITY");

	private final String value;

	MatcherType(final String value) {
		this.value = value;
	}

	@JsonValue
	public String getValue() {
		return value;
	}

	@Override
	public String toString() {
		return String.valueOf(value);
	}

	@JsonCreator
	public static MatcherType fromValue(final String value) {
		for (var x : MatcherType.values()) {
			if (x.value.equals(value)) {
				return x;
			}
		}
		throw new IllegalArgumentException("Unexpected value '" + value + "'");
	}
}
